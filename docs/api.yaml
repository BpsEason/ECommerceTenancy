openapi: 3.0.3
info:
  title: ECommerceTenancy API
  description: API documentation for the multi-tenant e-commerce platform.
  version: 1.0.0
paths:
  /v1/products:
    get:
      summary: List products for the current tenant
      parameters:
        - in: header
          name: Host
          required: true
          schema: { type: string, example: tenanta.localhost }
          description: Subdomain of the tenant
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: { type: integer, example: 1 }
                    name: { type: string, example: Espresso }
                    price_formatted: { type: string, example: '75.00 TWD' }
  /v1/recommendations:
    get:
      summary: Get recommended products based on popularity
      parameters:
        - in: header
          name: Host
          required: true
          schema: { type: string, example: tenanta.localhost }
          description: Subdomain of the tenant
      responses:
        '200':
          description: A list of recommended products
  /v1/orders:
    post:
      summary: Create a new order for the tenant
      parameters:
        - in: header
          name: Host
          required: true
          schema: { type: string, example: tenanta.localhost }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id: { type: integer }
                      quantity: { type: integer }
      responses:
        '201':
          description: Order created successfully
  /v1/payments:
    post:
      summary: Process a payment for an order
      parameters:
        - in: header
          name: Host
          required: true
          schema: { type: string, example: tenanta.localhost }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id: { type: string }
                amount: { type: number }
                payment_method: { type: string, enum: [stripe, ecpay, line_pay] }
      responses:
        '200':
          description: Payment processed
  /v1/tenants:
    post:
      summary: Create a new tenant (central)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: string, description: Unique tenant slug }
                name: { type: string }
                domain: { type: string, example: newtenant.localhost }
                currency: { type: string, example: JPY }
      responses:
        '201':
          description: Tenant created
